#+title: TD SIMD
#+author: Nicolas Bouton
#+date: 2020

* Information
** Makefile
*** Compile

    Run the command below to compile the program with *gcc* and *clang*
    with different optimization. And produce *assembler file*.

    #+begin_src bash
    $ make
    #+end_src

   
*** Clean

    You can also clean the *binary* and *~* file with :

    #+begin_src bash
    $ make clean
    #+end_src
    
** Script
*** Install script

    Desassemble *binary* file, and move *assembler* file. This script
    is called by *make* command.

    Usage :

    #+begin_src bash
    $ ./install.sh
    #+end_src

** Provide file

   There are 3 given files on the folders : *gcc_ver.txt*,
   *clang_ver.txt* and *cpuinfo.txt*.

* Answer
** Introduction

  Here I will compare *two compiler* by optimization flags.
  
  - gcc
  - clang
    
** Code

   In my c code, I let user to choice one size of the matrix to see
   the dynamic compilation effect and I fix a size in the code to see
   the static compilation effect.

** Base
*** gcc
*** clang
*** ccl
** Light
*** gcc
*** clang
*** ccl
** Optimized
*** gcc
*** clang
*** ccl
** High
*** gcc
*** clang
*** ccl
** Kamikaze
*** gcc
*** clang
*** ccl
** Conclusion

   _Vectorization :_

   | compiler \ opti | base | light | opti | high | kamikaze |
   |-----------------+------+-------+------+------+----------|
   | gcc             | -    | -     | -    | -    | -        |
   | clang           | -    | -     | -    | -    | -        |
